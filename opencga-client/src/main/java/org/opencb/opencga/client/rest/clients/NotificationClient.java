/*
* Copyright 2015-2024 OpenCB
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package org.opencb.opencga.client.rest.clients;

import org.opencb.commons.datastore.core.FacetField;
import org.opencb.commons.datastore.core.ObjectMap;
import org.opencb.opencga.client.rest.*;
import org.opencb.opencga.core.client.ParentClient;
import org.opencb.opencga.core.config.client.ClientConfiguration;
import org.opencb.opencga.core.exceptions.ClientException;
import org.opencb.opencga.core.models.notification.Notification;
import org.opencb.opencga.core.models.notification.NotificationCreateParams;
import org.opencb.opencga.core.response.RestResponse;


/*
* WARNING: AUTOGENERATED CODE
*
* This code was generated by a tool.
*
* Manual changes to this file may cause unexpected behavior in your application.
* Manual changes to this file will be overwritten if the code is regenerated.
*/


/**
 * This class contains methods for the Notification webservices.
 *    PATH: notifications
 */
public class NotificationClient extends ParentClient {

    public NotificationClient(String token, ClientConfiguration configuration) {
        super(token, configuration);
    }

    /**
     * Fetch catalog notification stats.
     * @param params Map containing any of the following optional parameters.
     *       organization: Organization id.
     *       uuid: Notification UUID.
     *       type: Notification type: INFO, WARNING, ERROR or URGENT.
     *       scope: Notification scope: GLOBAL, ORGANIZATION, PROJECT or STUDY.
     *       fqn: Organization, project or study fqn where the notification is associated.
     *       sender: User ID of the sender.
     *       target: Target of the notification.
     *       receiver: User ID receiver of the notification.
     *       internalStatus: Notification status: PENDING, SUCCESS, ERROR or DISCARDED.
     *       creationDate: Creation date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.
     *       modificationDate: Modification date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.
     *       field: Field to apply aggregation statistics to (or a list of fields separated by semicolons), e.g.:
     *            studies;type;numSamples[0..10]:1;format:sum(size).
     * @return a RestResponse object.
     * @throws ClientException ClientException if there is any server error.
     */
    public RestResponse<FacetField> aggregationStats(ObjectMap params) throws ClientException {
        params = params != null ? params : new ObjectMap();
        return execute("notifications", null, null, null, "aggregationStats", params, GET, FacetField.class);
    }

    /**
     * Create a new notification.
     * @param data JSON containing the notification information.
     * @return a RestResponse object.
     * @throws ClientException ClientException if there is any server error.
     */
    public RestResponse<Notification> create(NotificationCreateParams data) throws ClientException {
        ObjectMap params = new ObjectMap();
        params.put("body", data);
        return execute("notifications", null, null, null, "create", params, POST, Notification.class);
    }

    /**
     * Notification search method.
     * @param params Map containing any of the following optional parameters.
     *       include: Fields included in the response, whole JSON path must be provided.
     *       exclude: Fields excluded in the response, whole JSON path must be provided.
     *       limit: Number of results to be returned.
     *       skip: Number of results to skip.
     *       count: Get the total number of results matching the query. Deactivated by default.
     *       organization: Organization id.
     *       uuid: Notification UUID.
     *       type: Notification type: INFO, WARNING, ERROR or URGENT.
     *       scope: Notification scope: GLOBAL, ORGANIZATION, PROJECT or STUDY.
     *       fqn: Organization, project or study fqn where the notification is associated.
     *       sender: User ID of the sender.
     *       target: Target of the notification.
     *       receiver: User ID receiver of the notification.
     *       internalStatus: Notification status: PENDING, SUCCESS, ERROR or DISCARDED.
     *       creationDate: Creation date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.
     *       modificationDate: Modification date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.
     * @return a RestResponse object.
     * @throws ClientException ClientException if there is any server error.
     */
    public RestResponse<Notification> search(ObjectMap params) throws ClientException {
        params = params != null ? params : new ObjectMap();
        return execute("notifications", null, null, null, "search", params, GET, Notification.class);
    }

    /**
     * Return the notification information.
     * @param notification Notification UUID.
     * @param params Map containing any of the following optional parameters.
     *       include: Fields included in the response, whole JSON path must be provided.
     *       exclude: Fields excluded in the response, whole JSON path must be provided.
     *       organization: Organization id.
     * @return a RestResponse object.
     * @throws ClientException ClientException if there is any server error.
     */
    public RestResponse<Notification> info(String notification, ObjectMap params) throws ClientException {
        params = params != null ? params : new ObjectMap();
        return execute("notifications", notification, null, null, "info", params, GET, Notification.class);
    }
}
