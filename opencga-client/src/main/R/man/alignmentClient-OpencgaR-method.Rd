% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Alignment-methods.R
\name{alignmentClient,OpencgaR-method}
\alias{alignmentClient,OpencgaR-method}
\title{AlignmentClient methods}
\usage{
\S4method{alignmentClient}{OpencgaR}(OpencgaR, endpointName, params = NULL, ...)
}
\arguments{
\item{range}{Range of coverage values to be reported. Minimum and maximum values are separated by '-', e.g.: 20-40 (for coverage values greater or equal to 20 and less or equal to 40). A single value means to report coverage values less or equal to that value.}

\item{file1}{Input file #1 (e.g. somatic file).}

\item{file2}{Input file #2 (e.g. germline file).}

\item{skipLog2}{Do not apply Log2 to normalise the coverage ratio.}

\item{windowSize}{Window size for the region coverage (if a coverage range is provided, window size must be 1).}

\item{threshold}{Only regions whose coverage depth is under this threshold will be reported.}

\item{limit}{Number of results to be returned.}

\item{skip}{Number of results to skip.}

\item{count}{Get the total number of results matching the query. Deactivated by default.}

\item{file}{File ID.}

\item{region}{Comma separated list of regions 'chr:start-end, e.g.: 2,3:63500-65000.}

\item{gene}{Comma separated list of genes, e.g.: BCRA2,TP53.}

\item{offset}{Offset to extend the region, gene or exon at up and downstream.}

\item{onlyExons}{Only exons are taking into account when genes are specified.}

\item{minMappingQuality}{Minimum mapping quality.}

\item{maxNumMismatches}{Maximum number of mismatches.}

\item{maxNumHits}{Maximum number of hits.}

\item{properlyPaired}{Return only properly paired alignments.}

\item{maxInsertSize}{Maximum insert size.}

\item{skipUnmapped}{Skip unmapped alignments.}

\item{skipDuplicated}{Skip duplicated alignments.}

\item{regionContained}{Return alignments contained within boundaries of region.}

\item{forceMDField}{Force SAM MD optional field to be set with the alignments.}

\item{binQualities}{Compress the nucleotide qualities by using 8 quality levels.}

\item{splitResults}{Split results into regions (or gene/exon regions).}

\item{study}{study.}

\item{jobId}{Job ID. It must be a unique string within the study. An ID will be autogenerated automatically if not provided.}

\item{jobDependsOn}{Comma separated list of existing job IDs the job will depend on.}

\item{jobDescription}{Job description.}

\item{jobTags}{Job tags.}

\item{jobScheduledStartTime}{Time when the job is scheduled to start.}

\item{jobPriority}{Priority of the job.}

\item{jobDryRun}{Flag indicating that the job will be executed in dry-run mode. In this mode, OpenCGA will validate that all parameters and prerequisites are correctly set for successful execution, but the job will not actually run.}

\item{data}{Samtools parameters. Supported Samtools commands: sort, index, view, stats, flagstat, dict, faidx, depth, plot-bamstats.}
}
\description{
This function implements the OpenCGA calls for managing Analysis - Alignment.
The following table summarises the available \emph{actions} for this client:\tabular{llr}{
   endpointName \tab Endpoint WS \tab parameters accepted \cr
   runBwa \tab /{apiVersion}/analysis/alignment/bwa/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   runCoverageIndex \tab /{apiVersion}/analysis/alignment/coverage/index/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   coverageQcGeneCoverageStatsRun \tab /{apiVersion}/analysis/alignment/coverage/qc/geneCoverageStats/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   queryCoverage \tab /{apiVersion}/analysis/alignment/coverage/query \tab file\link{*}, study, region, gene, offset, onlyExons, range, windowSize, splitResults \cr
   ratioCoverage \tab /{apiVersion}/analysis/alignment/coverage/ratio \tab file1\link{*}, file2\link{*}, study, skipLog2, region, gene, offset, onlyExons, windowSize, splitResults \cr
   statsCoverage \tab /{apiVersion}/analysis/alignment/coverage/stats \tab file\link{*}, gene\link{*}, study, threshold \cr
   runDeeptools \tab /{apiVersion}/analysis/alignment/deeptools/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   runFastqc \tab /{apiVersion}/analysis/alignment/fastqc/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   runIndex \tab /{apiVersion}/analysis/alignment/index/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   runPicard \tab /{apiVersion}/analysis/alignment/picard/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   runQc \tab /{apiVersion}/analysis/alignment/qc/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
   query \tab /{apiVersion}/analysis/alignment/query \tab limit, skip, count, file\link{*}, study, region, gene, offset, onlyExons, minMappingQuality, maxNumMismatches, maxNumHits, properlyPaired, maxInsertSize, skipUnmapped, skipDuplicated, regionContained, forceMDField, binQualities, splitResults \cr
   runSamtools \tab /{apiVersion}/analysis/alignment/samtools/run \tab study, jobId, jobDependsOn, jobDescription, jobTags, jobScheduledStartTime, jobPriority, jobDryRun, body\link{*} \cr
}
}
\section{Endpoint /{apiVersion}/analysis/alignment/bwa/run}{

BWA is a software package for mapping low-divergent sequences against a large reference genome.
}

\section{Endpoint /{apiVersion}/analysis/alignment/coverage/index/run}{

Compute coverage for a list of alignment files.
}

\section{Endpoint /{apiVersion}/analysis/alignment/coverage/qc/geneCoverageStats/run}{

Compute gene coverage stats for a given alignment file and a list of genes.
}

\section{Endpoint /{apiVersion}/analysis/alignment/coverage/query}{

Query the coverage of an alignment file for regions or genes.
}

\section{Endpoint /{apiVersion}/analysis/alignment/coverage/ratio}{

Compute coverage ratio from file #1 vs file #2, (e.g. somatic vs germline).
}

\section{Endpoint /{apiVersion}/analysis/alignment/coverage/stats}{

Compute coverage stats per transcript for a list of genes.
}

\section{Endpoint /{apiVersion}/analysis/alignment/deeptools/run}{

Deeptools is a suite of python tools particularly developed for the efficient analysis of high-throughput sequencing data, such as ChIP-seq, RNA-seq or MNase-seq.
}

\section{Endpoint /{apiVersion}/analysis/alignment/fastqc/run}{

A high throughput sequence QC analysis tool.
}

\section{Endpoint /{apiVersion}/analysis/alignment/index/run}{

Index alignment file.
}

\section{Endpoint /{apiVersion}/analysis/alignment/picard/run}{

Picard is a set of command line tools (in Java) for manipulating high-throughput sequencing (HTS) data and formats such as SAM/BAM/CRAM and VCF. Supported Picard commands: CollectHsMetrics, CollectWgsMetrics, BedToIntervalList.
}

\section{Endpoint /{apiVersion}/analysis/alignment/qc/run}{

Compute quality control (QC) metrics for a given alignment file: samtools stats, samtools flag stats and FastQC metrics.
}

\section{Endpoint /{apiVersion}/analysis/alignment/query}{

Search over indexed alignments.
}

\section{Endpoint /{apiVersion}/analysis/alignment/samtools/run}{

Samtools is a program for interacting with high-throughput sequencing data in SAM, BAM and CRAM formats. Supported Samtools commands: sort, index, view, stats, flagstat, dict, faidx, depth, plot-bamstats.
}

\seealso{
\url{http://docs.opencb.org/display/opencga/Using+OpenCGA} and the RESTful API documentation
\url{http://bioinfo.hpc.cam.ac.uk/opencga-prod/webservices/}
\link{*}: Required parameter
}
