% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Individual-methods.R
\name{individualClient,OpencgaR-method}
\alias{individualClient,OpencgaR-method}
\title{IndividualClient methods}
\usage{
\S4method{individualClient}{OpencgaR}(
  OpencgaR,
  annotationSet,
  individual,
  individuals,
  members,
  endpointName,
  params = NULL,
  ...
)
}
\arguments{
\item{annotationSet}{AnnotationSet ID to be updated.}

\item{individual}{Individual ID, name or UUID.}

\item{individuals}{Comma separated list of individual ids.}

\item{members}{Comma separated list of user or group ids.}

\item{propagate}{Propagate individual permissions to related samples.}

\item{variableSetId}{Variable set ID or name.}

\item{path}{Path where the TSV file is located in OpenCGA or where it should be located.}

\item{parents}{Flag indicating whether to create parent directories if they don't exist (only when TSV file was not previously associated).}

\item{annotationSetId}{Annotation set id. If not provided, variableSetId will be used.}

\item{field}{Comma separated list of fields for which to obtain the distinct values.}

\item{limit}{Number of results to be returned.}

\item{skip}{Number of results to skip.}

\item{count}{Get the total number of results matching the query. Deactivated by default.}

\item{id}{Comma separated list individual IDs up to a maximum of 100. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{uuid}{Comma separated list individual UUIDs up to a maximum of 100.}

\item{name}{Comma separated list individual names up to a maximum of 100. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{father}{Father ID, name or UUID.}

\item{mother}{Mother ID, name or UUID.}

\item{samples}{Sample ID, name or UUID.}

\item{familyIds}{Comma separated list of family ids the individuals may belong to.}

\item{sex}{Individual sex.}

\item{dateOfBirth}{Individual date of birth.}

\item{ethnicity}{Individual ethnicity. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{disorders}{Comma separated list of disorder ids or names. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{phenotypes}{Comma separated list of phenotype ids or names. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{populationName}{Population name. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{populationSubpopulation}{Subpopulation name. Also admits basic regular expressions using the operator '~', i.e. '~{perl-regex}' e.g. '~value' for case sensitive, '~/value/i' for case insensitive search.}

\item{karyotypicSex}{Individual karyotypic sex.}

\item{lifeStatus}{Individual life status.}

\item{internalStatus}{Filter by internal status.}

\item{status}{Filter by status.}

\item{creationDate}{Creation date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.}

\item{modificationDate}{Modification date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.}

\item{annotation}{Annotation filters. Example: age>30;gender=FEMALE. For more information, please visit http://docs.opencb.org/display/opencga/AnnotationSets+1.4.0.}

\item{acl}{Filter entries for which a user has the provided permissions. Format: acl={user}:{permissions}. Example: acl=john:WRITE,WRITE_ANNOTATIONS will return all entries for which user john has both WRITE and WRITE_ANNOTATIONS permissions. Only study owners or administrators can query by this field. .}

\item{release}{Release when it was created.}

\item{snapshot}{Snapshot value (Latest version of the entry in the specified release).}

\item{member}{User or group id.}

\item{silent}{Boolean to retrieve all possible entries that are queried for, false to raise an exception whenever one of the entries looked for cannot be shown for whichever reason.}

\item{force}{Force the deletion of individuals that already belong to families.}

\item{version}{Comma separated list of individual versions. 'all' to get all the individual versions. Not supported if multiple individual ids are provided.}

\item{deleted}{Boolean to retrieve deleted individuals.}

\item{samplesAction}{Action to be performed if the array of samples is being updated. Allowed values: \link{'ADD SET REMOVE'}}

\item{phenotypesAction}{Action to be performed if the array of phenotypes is being updated \link{SET, ADD, REMOVE}. Allowed values: \link{'ADD SET REMOVE'}}

\item{disordersAction}{Action to be performed if the array of disorders is being updated \link{SET, ADD, REMOVE}. Allowed values: \link{'ADD SET REMOVE'}}

\item{annotationSetsAction}{Action to be performed if the array of annotationSets is being updated. Allowed values: \link{'ADD SET REMOVE'}}

\item{includeResult}{Flag indicating to include the created or updated document result in the response.}

\item{action}{Action to be performed: ADD to add new annotations; REPLACE to replace the value of an already existing annotation; SET to set the new list of annotations removing any possible old annotations; REMOVE to remove some annotations; RESET to set some annotations to the default value configured in the corresponding variables of the VariableSet if any. Allowed values: \link{'ADD SET REMOVE RESET REPLACE'}}

\item{data}{Json containing the map of annotations when the action is ADD, SET or REPLACE, a json with only the key 'remove' containing the comma separated variables to be removed as a value when the action is REMOVE or a json with only the key 'reset' containing the comma separated variables that will be set to the default value when the action is RESET.}

\item{include}{Fields included in the response, whole JSON path must be provided.}

\item{exclude}{Fields excluded in the response, whole JSON path must be provided.}

\item{flattenAnnotations}{Flatten the annotations?.}

\item{study}{Study [\link{organization@}project:]study where study and project can be either the ID or UUID.}

\item{degree}{Pedigree degree.}
}
\description{
This function implements the OpenCGA calls for managing Individuals.
The following table summarises the available \emph{actions} for this client:\tabular{llr}{
   endpointName \tab Endpoint WS \tab parameters accepted \cr
   updateAcl \tab /{apiVersion}/individuals/acl/{members}/update \tab study, members\link{*}, action\link{*}, propagate, body\link{*} \cr
   aggregationStats \tab /{apiVersion}/individuals/aggregationStats \tab study, id, uuid, name, father, mother, samples, familyIds, sex, dateOfBirth, ethnicity, disorders, phenotypes, populationName, populationSubpopulation, karyotypicSex, lifeStatus, internalStatus, status, deleted, creationDate, modificationDate, annotation, acl, release, snapshot, field \cr
   loadAnnotationSets \tab /{apiVersion}/individuals/annotationSets/load \tab study, variableSetId\link{*}, path\link{*}, parents, annotationSetId, body \cr
   create \tab /{apiVersion}/individuals/create \tab include, exclude, study, samples, includeResult, body\link{*} \cr
   distinct \tab /{apiVersion}/individuals/distinct \tab study, id, uuid, name, familyIds, father, mother, samples, sex, ethnicity, dateOfBirth, disorders, phenotypes, populationName, populationSubpopulation, karyotypicSex, lifeStatus, internalStatus, status, deleted, creationDate, modificationDate, annotation, acl, release, snapshot, field\link{*} \cr
   search \tab /{apiVersion}/individuals/search \tab include, exclude, limit, skip, count, flattenAnnotations, study, id, uuid, name, father, mother, samples, familyIds, sex, dateOfBirth, ethnicity, disorders, phenotypes, populationName, populationSubpopulation, karyotypicSex, lifeStatus, internalStatus, status, deleted, creationDate, modificationDate, annotation, acl, release, snapshot \cr
   acl \tab /{apiVersion}/individuals/{individuals}/acl \tab individuals\link{*}, study, member, silent \cr
   delete \tab /{apiVersion}/individuals/{individuals}/delete \tab force, study, individuals\link{*} \cr
   info \tab /{apiVersion}/individuals/{individuals}/info \tab include, exclude, flattenAnnotations, individuals\link{*}, study, version, deleted \cr
   update \tab /{apiVersion}/individuals/{individuals}/update \tab include, exclude, individuals\link{*}, study, samplesAction, phenotypesAction, disordersAction, annotationSetsAction, includeResult, body \cr
   updateAnnotationSetsAnnotations \tab /{apiVersion}/individuals/{individual}/annotationSets/{annotationSet}/annotations/update \tab individual\link{*}, study, annotationSet\link{*}, action, body \cr
   relatives \tab /{apiVersion}/individuals/{individual}/relatives \tab include, exclude, flattenAnnotations, individual\link{*}, study, degree \cr
}
}
\section{Endpoint /{apiVersion}/individuals/acl/{members}/update}{

Update the set of permissions granted for the member.
}

\section{Endpoint /{apiVersion}/individuals/aggregationStats}{

Fetch catalog individual stats.
}

\section{Endpoint /{apiVersion}/individuals/annotationSets/load}{

Load annotation sets from a TSV file.
}

\section{Endpoint /{apiVersion}/individuals/create}{

Create individual.
}

\section{Endpoint /{apiVersion}/individuals/distinct}{

Individual distinct method.
}

\section{Endpoint /{apiVersion}/individuals/search}{

Search for individuals.
}

\section{Endpoint /{apiVersion}/individuals/{individuals}/acl}{

Return the acl of the individual. If member is provided, it will only return the acl for the member.
}

\section{Endpoint /{apiVersion}/individuals/{individuals}/delete}{

Delete existing individuals.
}

\section{Endpoint /{apiVersion}/individuals/{individuals}/info}{

Get individual information.
}

\section{Endpoint /{apiVersion}/individuals/{individuals}/update}{

Update some individual attributes.
}

\section{Endpoint /{apiVersion}/individuals/{individual}/annotationSets/{annotationSet}/annotations/update}{

Update annotations from an annotationSet.
}

\section{Endpoint /{apiVersion}/individuals/{individual}/relatives}{

Get individual relatives.
}

\seealso{
\url{http://docs.opencb.org/display/opencga/Using+OpenCGA} and the RESTful API documentation
\url{http://bioinfo.hpc.cam.ac.uk/opencga-prod/webservices/}
\link{*}: Required parameter
}
