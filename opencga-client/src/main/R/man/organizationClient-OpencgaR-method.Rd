% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Organization-methods.R
\name{organizationClient,OpencgaR-method}
\alias{organizationClient,OpencgaR-method}
\title{OrganizationClient methods}
\usage{
\S4method{organizationClient}{OpencgaR}(
  OpencgaR,
  id,
  organization,
  user,
  endpointName,
  params = NULL,
  ...
)
}
\arguments{
\item{id}{Note unique identifier.}

\item{organization}{Organization id.}

\item{user}{User ID.}

\item{creationDate}{Creation date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.}

\item{modificationDate}{Modification date. Format: yyyyMMddHHmmss. Examples: >2018, 2017-2018, <201805.}

\item{type}{Note type.}

\item{scope}{Scope of the Note.}

\item{visibility}{Visibility of the Note.}

\item{uuid}{Unique 32-character identifier assigned automatically by OpenCGA.}

\item{userId}{User that wrote that Note.}

\item{tags}{Note tags.}

\item{version}{Autoincremental version assigned to the registered entry. By default, updates does not create new versions. To enable versioning, users must set the \code{incVersion} flag from the /update web service when updating the document.}

\item{tagsAction}{Action to be performed if the array of tags is being updated. Allowed values: \link{'ADD SET REMOVE'}}

\item{authenticationOriginsAction}{Action to be performed if the array of authenticationOrigins is being updated. Allowed values: \link{'ADD SET REMOVE REPLACE'}}

\item{include}{Fields included in the response, whole JSON path must be provided.}

\item{exclude}{Fields excluded in the response, whole JSON path must be provided.}

\item{includeResult}{Flag indicating to include the created or updated document result in the response.}

\item{adminsAction}{Action to be performed if the array of admins is being updated. Allowed values: \link{'ADD REMOVE'}}

\item{data}{JSON containing the params to be updated.}
}
\description{
This function implements the OpenCGA calls for managing Organizations.
The following table summarises the available \emph{actions} for this client:\tabular{llr}{
   endpointName \tab Endpoint WS \tab parameters accepted \cr
   create \tab /{apiVersion}/organizations/create \tab include, exclude, includeResult, body\link{*} \cr
   createNotes \tab /{apiVersion}/organizations/notes/create \tab include, exclude, includeResult, body\link{*} \cr
   searchNotes \tab /{apiVersion}/organizations/notes/search \tab include, exclude, creationDate, modificationDate, id, type, scope, visibility, uuid, userId, tags, version \cr
   deleteNotes \tab /{apiVersion}/organizations/notes/{id}/delete \tab id\link{*}, includeResult \cr
   updateNotes \tab /{apiVersion}/organizations/notes/{id}/update \tab include, exclude, id\link{*}, tagsAction, includeResult, body\link{*} \cr
   userUpdateStatus \tab /{apiVersion}/organizations/user/{user}/status/update \tab include, exclude, user\link{*}, organization, includeResult, body\link{*} \cr
   updateUser \tab /{apiVersion}/organizations/user/{user}/update \tab include, exclude, user\link{*}, organization, includeResult, body\link{*} \cr
   updateConfiguration \tab /{apiVersion}/organizations/{organization}/configuration/update \tab include, exclude, organization\link{*}, includeResult, authenticationOriginsAction, body\link{*} \cr
   info \tab /{apiVersion}/organizations/{organization}/info \tab include, exclude, organization\link{*} \cr
   update \tab /{apiVersion}/organizations/{organization}/update \tab include, exclude, organization\link{*}, includeResult, adminsAction, body\link{*} \cr
}
}
\section{Endpoint /{apiVersion}/organizations/create}{

Create a new organization.
}

\section{Endpoint /{apiVersion}/organizations/notes/create}{

Create a new note.
}

\section{Endpoint /{apiVersion}/organizations/notes/search}{

Search for notes of scope ORGANIZATION.
}

\section{Endpoint /{apiVersion}/organizations/notes/{id}/delete}{

Delete note.
}

\section{Endpoint /{apiVersion}/organizations/notes/{id}/update}{

Update a note.
}

\section{Endpoint /{apiVersion}/organizations/user/{user}/status/update}{

Update the user status.
}

\section{Endpoint /{apiVersion}/organizations/user/{user}/update}{

Update the user information.
}

\section{Endpoint /{apiVersion}/organizations/{organization}/configuration/update}{

Update the Organization configuration attributes.
}

\section{Endpoint /{apiVersion}/organizations/{organization}/info}{

Return the organization information.
}

\section{Endpoint /{apiVersion}/organizations/{organization}/update}{

Update some organization attributes.
}

\seealso{
\url{http://docs.opencb.org/display/opencga/Using+OpenCGA} and the RESTful API documentation
\url{http://bioinfo.hpc.cam.ac.uk/opencga-prod/webservices/}
\link{*}: Required parameter
}
