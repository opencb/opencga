name: Build and test the project
run-name: "Build and test the project. Hadoop flavour: ${{ inputs.hadoop }}. Test profile: ${{ inputs.test_profile }}. Test module: ${{ inputs.module }}"

on:
  workflow_call:
    inputs:
      test_profile:
        description: 'Maven test profile. Any combination of : [runShortTests, runMediumTests, runLongTests]'
        type: string
        required: true
      hadoop:
        type: string
        description: 'Hadoop flavour. Any of: [hdp3.1, hdi5.1, emr6.1, emr6.13]'
        required: false
        default: "hdp3.1"
      mvn_opts:
        type: string
        required: false
        default: ""
      sonar:
        type: boolean
        required: false
        default: true
      module:
        type: string
        description: "Maven modules to test. Empty means all. Only top-level modules. Example: 'opencga-storage'"
        required: false
        default: ""
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  analysis:
    name: Execute Sonar Analysis
    runs-on: ${{ vars.UBUNTU_VERSION }}
    if: ${{ inputs.sonar }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '10'
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Install dependencies branches
        run: |
          if [ -f "./.github/workflows/scripts/get_same_branch.sh" ]; then
            chmod +x ./.github/workflows/scripts/get_same_branch.sh
            ./.github/workflows/scripts/get_same_branch.sh ${{ github.ref_name }} ${{ inputs.hadoop }}
          else
             echo "./.github/workflows/scripts/get_same_branch.sh does not exist."
          fi
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -T 2 clean install -P storage-hadoop,${{ inputs.hadoop }},${{ inputs.test_profile }} -DskipTests -Dcheckstyle.skip org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_opencga


  test:
    name: Execute JUnit and Jacoco tests
    runs-on: ${{ vars.UBUNTU_VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '10'
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Install dependencies branches
        run: |
          if [ -f "./.github/workflows/scripts/get_same_branch.sh" ]; then
            chmod +x ./.github/workflows/scripts/get_same_branch.sh
            ./.github/workflows/scripts/get_same_branch.sh ${{ github.ref_name }} ${{ inputs.hadoop }}
          else
             echo "./.github/workflows/scripts/get_same_branch.sh does not exist."
          fi
      - name: Install Samtools
        run: sudo apt-get install samtools python3-deeptools
      - name: Start MongoDB v6.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs-test
      - name: Maven build (skip tests)
        run: mvn -B clean install -DskipTests -P ${{ inputs.hadoop }} -Dcheckstyle.skip ${{ inputs.mvn_opts }}
      - name: Build Junit log file name
        id: BuildJunitLogFileName
        run: |
          MODULE=$(basename ${{ (inputs.module == '' || inputs.module == 'all') && 'opencga' || inputs.module }} )
          if [[ -z "$MODULE" ]]; then
            MODULE="opencga"
          fi
          TAGS=$(echo ${{ inputs.test_profile }} | sed -e 's/run\([^,]*\)Tests/\1/g'  | tr ',' '_' | tr '[:upper:]' '[:lower:]' )
          echo "TESTS_LOG_FILE_NAME=junit_${{ inputs.hadoop }}_${TAGS}_${MODULE}.log.gz" >> $GITHUB_OUTPUT
      - name: Run Junit tests
        run: mvn -B verify surefire-report:report --fail-never -Dsurefire.testFailureIgnore=true -f ${{ (inputs.module == '' || inputs.module == 'all') && '.' || inputs.module }} -P ${{ inputs.hadoop }},${{ inputs.test_profile }} -Dcheckstyle.skip -pl ':opencga-app' --also-make ${{ inputs.mvn_opts }}  |& tee >(gzip > ${{ steps.BuildJunitLogFileName.outputs.TESTS_LOG_FILE_NAME }} ) |& grep -a -P '^\[[^\]]*(INFO|WARNING|ERROR)' --colour=never --line-buffered
      - name: Upload Junit test logs
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.BuildJunitLogFileName.outputs.TESTS_LOG_FILE_NAME }}
          path: ${{ steps.BuildJunitLogFileName.outputs.TESTS_LOG_FILE_NAME }}
      - name: Publish Test Report on GitHub
        uses: scacap/action-surefire-report@v1
        env:
          NODE_OPTIONS: '--max_old_space_size=6144'
        ## Skip cancelled()
        ## https://docs.github.com/en/actions/learn-github-actions/expressions#cancelled
        if: success() || failure()
        with:
          check_name: "Surefire tests report ${{ inputs.hadoop }} ${{ inputs.module }} ${{ inputs.test_profile }}"
          report_paths: './**/surefire-reports/TEST-*.xml'
          commit: '${{ github.sha }}'
          fail_on_test_failures: true
          fail_if_no_tests: false


