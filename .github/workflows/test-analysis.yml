name: Build and test the project
on:
  workflow_call:
    inputs:
      test_profile:
        type: string
        required: true
      report_context:
        type: string
        required: true
      ref:
        description: "The branch, tag or SHA to test. Otherwise, uses the default branch."
        type: string
        required: false
        default: ""
      mvn_opts:
        type: string
        required: false
        default: ""
    secrets:
      SONAR_TOKEN:
        required: true
      SSH_TESTING_SERVER_HOST:
        required: true
      SSH_TESTING_SERVER_PORT:
        required: true
      SSH_TESTING_SERVER_USER:
        required: true
      SSH_TESTING_SERVER_PASSWORD:
        required: true
env:
  xb_version: "1.6.1"
jobs:
  analysis:
    name: Execute Sonar Analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/checkout@v3
        with:
          ref: "${{ inputs.ref }}"
          fetch-depth: '0'
          path: './opencga_to_test/'
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Install dependencies branches
        run: |
          if [ -f "./.github/workflows/scripts/get_same_branch.sh" ]; then
            chmod +x ./.github/workflows/scripts/get_same_branch.sh
            ./.github/workflows/scripts/get_same_branch.sh $(git -C ./opencga_to_test/ rev-parse --abbrev-ref HEAD)
          else
             echo "./.github/workflows/scripts/get_same_branch.sh does not exist."
          fi
      - name: Test and Analyze
        working-directory: './opencga_to_test/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -T 2 clean install -P storage-hadoop,hdp3.1,${{ inputs.test_profile }} -DskipTests -Dcheckstyle.skip org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=opencb_opencga
  test:
    name: Execute JUnit and Jacoco tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/checkout@v3
        with:
          ref: "${{ inputs.ref }}"
          fetch-depth: '0'
          path: './opencga_to_test/'
      - name: "Get commit sha to test"
        working-directory: './opencga_to_test/'
        run: |
          echo "opencga_test_commit=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Install dependencies branches
        run: |
          if [ -f "./.github/workflows/scripts/get_same_branch.sh" ]; then
            chmod +x ./.github/workflows/scripts/get_same_branch.sh
            ./.github/workflows/scripts/get_same_branch.sh $(git -C ./opencga_to_test/ rev-parse --abbrev-ref HEAD)
          else
             echo "./.github/workflows/scripts/get_same_branch.sh does not exist."
          fi
      - name: Install Samtools
        run: sudo apt-get install samtools python3-deeptools
      - name: Start MongoDB v6.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs-test
      - name: Run Junit tests
        working-directory: './opencga_to_test/'
        run: mvn -B verify surefire-report:report --fail-never -P storage-hadoop,hdp3.1,${{ inputs.test_profile }} -Dcheckstyle.skip -Popencga-storage-hadoop-deps -pl '!:opencga-storage-hadoop-deps-emr6.1,!:opencga-storage-hadoop-deps-hdp2.6' ${{ inputs.mvn_opts }}
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        ## Skip cancelled()
        ## https://docs.github.com/en/actions/learn-github-actions/expressions#cancelled
        if: success() || failure()
        with:
          check_name: "Surefire tests report"
          report_paths: './opencga_to_test/**/surefire-reports/TEST-*.xml'
          commit: '${{ env.opencga_test_commit }}'
          fail_on_test_failures: true
#      - name: Upload result dir
#        uses: actions/upload-artifact@v3
#        with:
#          name: workdir
#          path: "**/target/site"
#  publish-test:
#    name: Publish test results
#    runs-on: ubuntu-22.04
#    needs: test
#    strategy:
#      matrix:
#        module: ["opencga-app", "opencga-catalog", "opencga-client", "opencga-clinical", "opencga-core", "opencga-master", "opencga-server", "opencga-storage", "opencga-storage/opencga-storage-app", "opencga-storage/opencga-storage-benchmark", "opencga-storage/opencga-storage-core", "opencga-storage/opencga-storage-hadoop", "opencga-storage/opencga-storage-server", "opencga-storage/opencga-storage-hadoop/opencga-storage-hadoop-core", "opencga-storage/opencga-storage-hadoop/opencga-storage-hadoop-deps"]
#    steps:
#      - name: Download result dir
#        uses: actions/download-artifact@v3
#        with:
#          name: workdir
#      - name: Deploy unit tests web recursively to remote
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: ${{ matrix.module }}/target/site
#          remote: /var/www/html/reports/${{ inputs.report_context }}/${{ env.xb_version }}/${{ github.ref_name }}/opencga/${{ github.sha }}/unit/${{ matrix.module }}
#          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
#          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
#          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
#          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
#          concurrency: 2
